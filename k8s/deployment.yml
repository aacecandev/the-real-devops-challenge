apiVersion: v1
kind: Namespace
metadata:
  name: restaurant
  labels:
    app.kubernetes.io/name: restaurant
    app.kubernetes.io/instance: restaurant
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: restaurant-serviceaccount
    app.kubernetes.io/instance: restaurant
  name: restaurant-serviceaccount
  namespace: restaurant
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: restaurant-clusterrole
    app.kubernetes.io/instance: ingress-nginx
  name: restaurant-clusterrole
rules:
  - apiGroups:
      - ''
    resources:
      - endpoints
      - nodes
      - pods
    verbs:
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ''
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - networking.k8s.io 
    resources:
      - ingressclasses
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: restaurant-clusterrolebinding
    app.kubernetes.io/instance: ingress-nginx
  name: restaurant-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: restaurant-clusterrole
subjects:
  - kind: ServiceAccount
    name: restaurant-serviceaccount
    namespace: ingress-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: restaurant-deployment
spec:
  selector:
    matchLabels:
      app: restaurant-app
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 1
  template:
    metadata:
      labels:
        app: restaurant-app
    spec:
      containers:
      - name: python-api
        image: aacecandev/python-api
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
                - /wait-shutdown
        ports:
          - name: http
            containerPort: 8080
            protocol: TCP
            hostPort: 8080
        resources:
            requests:
              cpu: 100m
              memory: 90Mi
            limits:
              cpu: 200m
              memory: 200Mi
      - name: db-api
      image: aacecandev/db-api
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
              - /wait-shutdown
      ports:
        - name: http
          containerPort: 27017
          protocol: TCP
          hostPort: 27017
      resources:
          requests:
            cpu: 100m
            memory: 90Mi
          limits:
            cpu: 200m
            memory: 200Mi
    nodeSelector:
        ingress-ready: 'true'
        kubernetes.io/os: linux
    tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Equal
    serviceAccountName: restaurant-serviceaccount
    terminationGracePeriodSeconds: 0

